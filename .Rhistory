View(data9)
data()
View(crimtab)
View(CO2)
View(storms)
View(Storms)
View(storms)
View(storms)
## Is there any column for which we can arrange or sort
## Sort the data acc to day and hour
data10 = arrange(mtcars, day, hour)
## Is there any column for which we can arrange or sort
## Sort the data acc to day and hour
data10 = arrange(mtcars, day, hour)
## Is there any column for which we can arrange or sort
## Sort the data acc to day and hour
data10 = arrange(storms, day, hour)
View(data10)
## Remove column with NA from storms
data11 = select(storms, -NA)
## Extract the data for tropical stom
data11 = filter(storms, status = "tropical storm")
## Extract the data for tropical stom
data11 = filter(storms, status == "tropical storm")
View(data11)
## Remove column with NA from storms
data12 = select(storms, -9, -12, -13)
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
data()
View(diamonds)
ggplot(diamonds, aes(x = cut)) + geom_bar()
ggplot(diamonds, aes(x = cut)) + geom_bar(color ="Blue")
ggplot(diamonds, aes(x = cut)) + geom_bar(color = "Blue", fill = "Yellow")
ggplot(diamonds, aes(x = cut)) + geom_bar(color = "Red", fill = "Yellow")
ggplot(diamonds, aes(x = cut)) + geom_bar(color = "Red", fill = "Yellow", size = 100)
ggplot(diamonds, aes(x = cut)) + geom_bar(color = "Red", fill = "Yellow", size = 10)
ggplot(diamonds, aes(x = cut)) + geom_bar(fill = "Yellow")
ggplot(diamonds, aes(x = cut)) + geom_bar(fill = "Yellow", size = 10))
ggplot(diamonds, aes(x = cut)) + geom_bar(fill = "Yellow", width =  = 10))
ggplot(diamonds, aes(x = cut)) + geom_bar(fill = "Yellow", width = 10))
ggplot(diamonds, aes(x = cut)) + geom_bar(fill = "Yellow", width = 10))
ggplot(diamonds, aes(x = cut)) + geom_bar(fill = "Yellow", width = 10)
ggplot(diamonds, aes(x = cut)) + geom_bar(fill = "Yellow", width = 0.5)
ggplot(diamonds, aes(x = cut)) + geom_point()
()
ggplot(diamonds, aes(x = cut, y = "price") + geom_point()
ggplot(diamonds, aes(x = depth, y = "price") + geom_point()
ggplot(diamonds, aes(x = depth, y = price) + geom_point()
ggplot(diamonds, aes(x = depth, y = price) + geom_point()
ggplot(diamonds, aes(x = depth, y = price)) + geom_point()
View(CO2)
ggplot(CO2, aes(x = depth, y = price)) + geom_point()
ggplot(CO2, aes(x = conc, y = uptake)) + geom_point()
data2 = arrange(CO2, conc)
library(dplyr)
data2 = arrange(CO2, conc)
ggplot(data2, aes(x = conc, y = uptake)) + geom_point()
ggplot(data2, aes(x = conc, y = uptake)) + geom_point()
ggplot(data2, aes(x = conc, y = uptake)) + geom_point(size = 2)
ggplot(data2, aes(x = conc, y = uptake)) + geom_point(size = 5)
ggplot(data2, aes(x = conc, y = uptake)) + geom_point(color = Cyan, size = 3)
ggplot(data2, aes(x = conc, y = uptake)) + geom_point(color = Orange, size = 3)
ggplot(data2, aes(x = conc, y = uptake)) + geom_point(fill = "Yellow", size = 3)
ggplot(data2, aes(x = conc, y = uptake)) + geom_point(color = "Yellow", size = 3)
ggplot(data2, aes(x = conc, y = uptake)) + geom_point(color = "Green", size = 3)
ggplot(CO2, aes(x = uptake)) + geom_histogram()
ggplot(CO2, aes(x = uptake)) + geom_histogram(color = "Blue")
ggplot(CO2, aes(x = uptake)) + geom_histogram(binwidth = 1)
ggplot(CO2, aes(x = uptake)) + geom_histogram(binwidth = 1, fill = "Red")
ggplot(CO2, aes(x = uptake)) + geom_histogram(binwidth = 6, fill = "Red")
ggplot(CO2, aes(x = uptake)) + geom_histogram(binwidth = 7, fill = "Red")
ggplot(CO2, aes(x = uptake)) + geom_histogram(binwidth = 1.5, fill = "Red")
ggplot(CO2, aes(x = uptake)) + geom_histogram(binwidth = 8, fill = "Red")
ggplot(CO2, aes(x = uptake)) + geom_histogram(binwidth = 1, fill = "Red")
ggplot(CO2, aes(x = uptake)) + geom_histogram(binwidth = 1.25, fill = "Red")
ggplot(CO2, aes(x = uptake)) + geom_histogram(binwidth = 1, fill = "Red", color = "Black")
ggplot(CO2, aes(x = uptake)) + geom_histogram(binwidth = 2, fill = "Red", color = "Black")
ggplot(CO2, aes(x = uptake)) + geom_boxplot()
data()
data = data.frame(Global_YouTube_Statistics)
data
print(data)
data = data.frame(Global_YouTube_Statistics)
library(readr)
Global_YouTube_Statistics <- read_csv("Global YouTube Statistics.csv")
View(Global_YouTube_Statistics)
data = data.frame(Global_YouTube_Statistics)
data
View(data)
Data=spread(data, Country, category)
library(dplyr)
library(tidyr)
Data=spread(data, Country, category)
View(Data)
data_new = gather(Data, "hello", "hello_again", 27:50)
View(data_new)
data()
data = data.frame(Global_YouTube_Statistics)
data
Data=spread(data, Country, category)
data_new = gather(Data, "hello", "hello_again", 27:50)
View(data_new)
data()
View(mtcars)
data_new = mtcars
data1 = select(data_new, 2:5)
data1
data1
View(data1)
data2 = select(mtcars, -cyl)
data2
View(data2)
data3 = filter(mtcars, mpg>15)
View(data3)
data4 = slice(mtcars, 1:25)
View(data4)
data4 = slice(mtcars, 5:25)
data5 = arrange(mtcars, gear, wt)
View(data6)
data5 = arrange(mtcars, gear, wt)
View(data5)
data5 = arrange(mtcars, desc(gear), wt)
View(data5)
data7 = group_by(data_new, cyl)
View(data7)
data8 = summarise(data7, avg1 = mean(wt))
View(data8)
View(data9)
View(data8)
data9 = mtcars %>% select(1:9) %>% filter(wt>=3) %>% arrange(cyl)
View(data9)
## Is there any column for which we can arrange or sort
## Sort the data acc to day and hour
data10 = arrange(storms, day, hour)
View(data10)
data2 = select(data1, 3:9, 13)
View(data2)
data1 = Placement_Data_Full_Class_3_Placement_Data_Full_Class_3_
View(data1)
data1 = Placement_Data_Full_Class_3_Placement_Data_Full_Class_3_
library(readr)
Placement_Data_Full_Class_3_Placement_Data_Full_Class_3_ <- read_csv("Placement_Data_Full_Class (3) - Placement_Data_Full_Class (3).csv")
View(Placement_Data_Full_Class_3_Placement_Data_Full_Class_3_)
data1 = Placement_Data_Full_Class_3_Placement_Data_Full_Class_3_
View(data1)
data2 = select(data1, 3:9, 13)
View(data2)
data3 = group_by(data1, gender)
View(data3)
data4 = summarise(data3, avg_ssc = mean(ssc_p), avg_hsc = mean(hsc_p))
View(data4)
data5 = group_by(data1, specialisation)
data6 = summarise(data5, avg_pagar = mean(salary))
View(data6)
data7 = summarise(data3, avg_mba_gun_prapt = mean(mba_p))
View(data7)
data25= group_by(data8, workex)
data26 = summarise(data25, avg = mean(salary))
## Spread the data of salary as per MBA spec
data10 = spread(data8, specialisation, salary)
View(data10)
data8 = filter(data1, salary>0)
## Spread the data of salary as per MBA spec
data10 = spread(data8, specialisation, salary)
View(data10)
data11 = gather(data10, "gathered_spec","gathered_pagar", 14:15)
View(data11)
data12 = mutate(data8, avg_of_hsc_ssc = ((hsc_p+ssc_p)/2))
View(data12)
data12 = mutate(data8, "avg_of_hsc_ssc" = ((hsc_p+ssc_p)/2))
View(data12)
data()
ID = c(101,102,103,104,105,106)
Age = c(45,61,34,33,56,71)
Gender = c("M", "F","F","M","M","F")
Adhar = c("YES","NO","YES","YES","NO","YES")
Mobile = c(123456789,223456789,323456789,423456789,523456789,623456789)
dataframe = data.frame(ID,Age,Gender,Adhar,Mobile)
View(dataframe)
## Q2
data()
View(Titanic)
# summary of titanic
summary(Titanic)
# structure of titanic
str(Titanic)
# Q3
library(readr)
healthcare_dataset_stroke_data <- read_csv("C:/Users/Admin/Desktop/R IE1/healthcare-dataset-stroke-data.csv",
col_types = cols(bmi = col_number()))
library(readr)
healthcare_dataset_stroke_data <- read_csv("healthcare-dataset-stroke-data.csv")
View(healthcare_dataset_stroke_data)
healthcare_dataset_stroke_data <- read_csv("C:/Users/Admin/Desktop/R IE1/healthcare-dataset-stroke-data.csv",
col_types = cols(bmi = col_number()))
healthcare_dataset_stroke_data <- read_csv("/Users/adityaagre/Desktop/cool/academics/Sem5/Statistical analysis using R/healthcare-dataset-stroke-data.csv", col_types = cols(bmi = col_number()))
healthcare_dataset_stroke_data <- read_csv("healthcare-dataset-stroke-data.csv", col_types = cols(bmi = col_number()))
library(readr)
healthcare_dataset_stroke_data <- read_csv("healthcare-dataset-stroke-data.csv")
View(healthcare_dataset_stroke_data)
data1 = loan_sanction_test
library(readr)
loan_sanction_test <- read_csv("loan_sanction_test.csv")
View(loan_sanction_test)
data1 = loan_sanction_test
data()
View(diamonds)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
data()
View(Orange)
data()
View(diamonds)
## rplot tp 1
ggplot(diamonds, aes(x = cut)) + geom_bar()
ggplot(diamonds, aes(x = cut)) + geom_bar(color ="Blue")
ggplot(diamonds, aes(x = cut)) + geom_bar(color = "Red", fill = "Yellow")
ggplot(diamonds, aes(x = cut)) + geom_bar(color = "Red", fill = "Yellow", size = 10)
ggplot(diamonds, aes(x = cut)) + geom_bar(fill = "Yellow")
ggplot(diamonds, aes(x = cut)) + geom_bar(fill = "Yellow", width = 0.5)
## POINT GRAPH
ggplot(diamonds, aes(x = depth, y = price)) + geom_point()
ggplot(diamonds, aes(x = cut, y = "price") + geom_point()
ggplot(CO2, aes(x = conc, y = uptake)) + geom_point()
## POINT GRAPH
ggplot(diamonds, aes(x = depth, y = price)) + geom_point()
## POINT GRAPH
ggplot(diamonds, aes(x = depth, y = price)) + geom_point()
ggplot(CO2, aes(x = conc, y = uptake)) + geom_point()
## POINT GRAPH
ggplot(diamonds, aes(x = depth, y = price)) + geom_point()
ggplot(CO2, aes(x = conc, y = uptake)) + geom_point()
data2 = arrange(CO2, conc)
ggplot(data2, aes(x = conc, y = uptake)) + geom_point()
ggplot(data2, aes(x = conc, y = uptake)) + geom_point(size = 2)
ggplot(data2, aes(x = conc, y = uptake)) + geom_point(size = 5)
ggplot(data2, aes(x = conc, y = uptake)) + geom_point(color = "Green", size = 3)
ggplot(CO2, aes(x = uptake)) + geom_histogram(color = "Blue")
View(CO2)
ggplot(CO2, aes(x = uptake)) + geom_histogram(binwidth = 2, fill = "Red", color = "Black")
ggplot(CO2, aes(x = uptake)) + geom_histogram(binwidth = 10, fill = "Red", color = "Black")
ggplot(CO2, aes(x = uptake)) + geom_histogram(binwidth = 10, fill = "Red", color = "Yellow", size = 2)
ggplot(CO2, aes(x = uptake)) + geom_histogram(binwidth = 10, fill = "Red", color = "Yellow", size = 2, width = 0.5)
ggplot(CO2, aes(x = uptake)) + geom_histogram(binwidth = 10, fill = "Red", color = "Yellow", size = 2, width = 0.2)
ggplot(CO2, aes(x = uptake)) + geom_boxplot()
data1 = loan_sanction_test
View(data)
data1 = loan_sanction_test
View(data1)
# Which gender has more applicants
plot1 = ggplot(loan_sanction_test, aes(Gender)) + geom_bar()
plot1
## q2, areawise gender variations
plot2 = ggplot(loan_sanction_test, aes(Gender, fill = Property_Area)) + geom_bar()
plot2
## This gives stack bar
## Hard to check frequencies
## so, group them (position = dodge)
plot3 = ggplot(loan_sanction_test, aes(Gender, fill = Property_Area)) + geom_bar(position = "dodge")
plot3
plot4 = ggplot(loan_sanction_test, aes(Gender, fill = Property_Area)) + geom_bar(position = "fill")
plot4
## q3 mean loan amt acc to categories
data5 = group_by(data1, Self_Employed)
data6 = summarise(data5, Average_LoanAmount = mean(LoanAmount))
data6
## But here some spaces have loan amounts as null. To handle this,
## We are omitting NA values
data7 = data1 %>% na.omit(data1)
data7
data5 = group_by(data7, Self_Employed)
data6 = summarise(data5, Average_LoanAmount = mean(LoanAmount))
data6
data_a = filter(data7, CoapplicantIncome == 0) %>% summarise(mean_amt = mean(LoanAmount))
data_a
data_b = filter(data7, CoapplicantIncome > 0) %>% summarise(mean_amt = mean(LoanAmount))
data_b
## OR
data_a2 = filter(data7, CoapplicantIncome == 0)
data_a2_mean = summarise(data_a2, mean_amt = mean(LoanAmount))
data_a2_mean ## This gives 127
data_b2 = filter(data7, CoapplicantIncome > 0)
data_b2_mean = summarise(data_b2, mean_amt = mean(LoanAmount))
data_b2_mean ## This gives 144. Now we can compare for both.
## Q5
plot10 = ggplot(loan_sanction_test, aes(LoanAmount, Education)) + geom_boxplot()
## Q5
plot10 = ggplot(loan_sanction_test, aes(LoanAmount, Education)) + geom_boxplot()
plot10
## Q5
plot10 = ggplot(loan_sanction_test, aes(LoanAmount, Education)) + geom_boxplot()
plot10
## If you want to see this genderwise too,
plot11 = ggplot(loan_sanction_test, aes(LoanAmount, Education)) + geom_boxplot() + facet_wrap(~Gender)
plot11
install.packages("ggplot2")
View(ChickWeight)
#dotplot#
ggplot(ChickWeight, aes(x=Diet, stat="count"))+geom_dotplot(binwidth = 1)
# Box Plot#
ggplot(ChickWeight, aes(x=weight, stat="count"))+geom_boxplot()
#dotplot#
ggplot(ChickWeight, aes(x=Diet, stat="count"))+geom_dotplot(binwidth = 1)
#dotplot#
ggplot(ChickWeight, aes(x=Diet, stat="hey"))+geom_dotplot(binwidth = 1)
#dotplot#
ggplot(ChickWeight, aes(x=Diet, stat="count"))+geom_dotplot(binwidth = 1)
#dotplot#
ggplot(ChickWeight, aes(x=Diet, stat="count"))+geom_dotplot(binwidth = 0.2)
View(ChickWeight)
#dotplot#
ggplot(ChickWeight, aes(x=Weight, stat="count"))+geom_dotplot(binwidth = 0.2)
#dotplot#
ggplot(ChickWeight, aes(x=weight, stat="count"))+geom_dotplot(binwidth = 0.2)
#dotplot#
ggplot(ChickWeight, aes(x=weight, stat="count"))+geom_dotplot(binwidth = 1)
#dotplot#
ggplot(ChickWeight, aes(x=weight, stat="count"))+geom_dotplot(binwidth = 20)
#dotplot#
ggplot(ChickWeight, aes(x=weight, stat="count"))+geom_dotplot(binwidth = 10)
# Box Plot#
ggplot(ChickWeight, aes(x=weight, stat="count"))+geom_boxplot()
# Box Plot#
ggplot(ChickWeight, aes(x=weight))+geom_boxplot()
# Flip coordinates Box Plot#
ggplot(ChickWeight, aes(x=weight, stat="count"))+geom_boxplot()+coord_flip()
# Flip coordinates Box Plot#
ggplot(ChickWeight, aes(x=weight))+geom_boxplot()+coord_flip()
# Flip coordinates Box Plot with theme function#
ggplot(ChickWeight, aes(x=weight))+geom_boxplot()+coord_flip()+theme(axis.text.y=element_blank(), axis.ticks.y=element_blank())
# Histogram#
ggplot(ChickWeight, aes(x=weight))+geom_histogram(binwidth=20)
# Density#
ggplot(ChickWeight, aes(x=weight))+geom_density()
dev.off()
library(grid)
viewport<- viewport(layout=grid.layout(4,1))
pushViewport(viewport)
dot<-ggplot(ChickWeight, aes(x=Diet))+geom_dotplot(binwidth = 0.25)
print(x=dot,vp=viewport(layout.pos.row = 1,layout.pos.col=1))
box<-ggplot(ChickWeight, aes(x=weight))+geom_boxplot()
print(x=box,
vp=viewport(
layout.pos.row = 2,
layout.pos.col=1))
Hist<-ggplot(
ChickWeight, aes(x=weight, stat="count"))+
geom_histogram(binwidth=20)
print(x=Hist,
vp=viewport(
layout.pos.row = 3,
layout.pos.col=1))
Density<-ggplot(
ChickWeight, aes(x=weight, stat="count"))+
geom_density()
print(x=Density,
vp=viewport(
layout.pos.row = 4,
layout.pos.col=1))
# Flip coordinates Box Plot#
ggplot(ChickWeight, aes(x=weight))+geom_boxplot()+coord_flip()
# Flip coordinates Box Plot with theme function#
ggplot(ChickWeight, aes(x=weight))+geom_boxplot()+coord_flip()+theme(axis.text.y=element_blank(), axis.ticks.y=element_blank())
# Histogram#
ggplot(ChickWeight, aes(x=weight))+geom_histogram(binwidth=20)
install.packages("ggplot2")
library(ggplot2)
View(CO2)
ggplot(CO2, aes(x=Treatment))+geom_bar()
# Title of the Plot#
ggplot(
CO2, aes(x=Treatment))+
geom_bar()+
ggtitle("CO2")
#Flip the coordinates#
ggplot(
CO2, aes(x=Treatment))+
geom_bar()+
coord_flip()+
ggtitle("CO2")
#Outline color#
ggplot(
CO2, aes(x=Treatment))+
geom_bar(color="red")+
ggtitle("CO2")
#Change Axis Titles#
ggplot(
CO2, aes(x=Treatment))+
geom_bar(color="red", fill="blue")+
ggtitle("CO2")+
xlab("Treatment")+
ylab("Count")
#Change Axis Titles#
ggplot(
CO2, aes(x=Treatment))+
geom_bar(color="red", fill="blue")+
ggtitle("CO2")+
xlab("Treatment")+
ylab("Count")
#Transparency of the Plot#
ggplot(
CO2, aes(x=Treatment))+
geom_bar(color="red", fill="blue", alpha=0.5)+
ggtitle("CO2")+
xlab("Treatment")+
ylab("Count")
#Axis text color Change#
ggplot(
CO2, aes(x=Treatment))+
geom_bar(color="red", fill="blue",width = 0.1, alpha=0.5)+
theme(axis.text = element_text(size=12, colour =  'Green')
)
# Point Graph#
ggplot(CO2, aes(x=Treatment))+geom_point(stat="Count")+
ggtitle("Count of uptake w r to treatment")
#Pie Graph#
ggplot(
CO2, aes(x="", fill=Treatment))+
geom_bar()+
coord_polar(theta="y")+
ggtitle("CO2")
# Point Graph#
ggplot(CO2, aes(x=Treatment))+geom_point()+
ggtitle("Count of uptake w r to treatment")
# Point Graph#
ggplot(CO2, aes(x=Treatment))+geom_point()+
ggtitle("Count of uptake w r to treatment")
# Point Graph#
ggplot(CO2, aes(x=Treatment))+geom_point(stat="Count")+
ggtitle("Count of uptake w r to treatment")
# Dot Plot#
ggplot(CO2, aes(x=Type, y=uptake))+geom_point()
#Pie Graph#
ggplot(
CO2, aes(x="", fill=Treatment))+
geom_bar()+
coord_polar(theta="y")+
ggtitle("CO2")
data()
View(Orange)
#Linear Regression Line#
ggplot(Orange, aes(y=age, x=circumference))+ geom_point()+geom_smooth(method='lm')
#Heat Map#
ggplot(Orange, aes(y=age, x=circumference))+stat_bin2d()
#Heat Map#
ggplot(Orange, aes(y=age, x=circumference))+
stat_binhex()
#Create a Contour plot of density#
ggplot(Orange, aes(y=age, x=circumference))+
stat_density2d(aes(fill=..level..), geom="polygon")
#Step Chart#
ggplot(
Orange, aes(y=age, x=circumference))+
geom_step()+
expand_limits(y=0)
#Line Chart#
ggplot(
Orange, aes(y=age, x=circumference))+
geom_line()+
expand_limits(y=0)
#Area Chart#
ggplot(
Orange, aes(y=age, x=circumference))+
geom_area()
View(diamonds)
View(diamonds)
## Avg with summarise:
data1 = sumarise(diamonds, avg=mean($))
## Avg with summarise:
data1 = sumarise(diamonds, avg=mean(carat))
detach("package:dplyr", unload = TRUE)
library(dplyr)
## Avg with summarise:
data1 = sumarise(diamonds, avg=mean(carat))
## Avg with summarise:
data1 = summarise(diamonds, avg=mean(carat))
View(data1)
data2 = group_by(diamonds, color)
data3 = summarise(data2, avg=mean(price))
View(data3)
data2 = group_by(diamonds, color)
data3 = summarise(data2, "avg"=mean(price))
View(data3)
data2 = group_by(diamonds, color) %>% summarise("avg"=mean(price))
View(data2)
View(data2)
ggplot(diamonds, aes(price, color)) + geom_boxplot()
ggplot(diamonds, aes(price)) + geom_boxplot() + facet_wrap(~color)
gplot(diamonds, aes(color)) + geom_bar()
ggplot(diamonds, aes(color)) + geom_bar()
data3 = summarise(diamonds, standard_dev = std(diamonds$price))
data3 = std(diamonds$price)
data3 = sd(diamonds$price)
View(data3)
print(sd(diamonds$price))
## coefficient of variation = (sd/mean)*100
## Range = max - min
print(range(diamonds$price))
## coefficient of variation = (sd/mean)*100
print(var(diamonds$price))
## Measures of dispersion
## range, sd, cv
## sd = standard deviation
print(sd(diamonds$price))
## coefficient of variation = (sd/mean)*100
print(var(diamonds$price))
## Range = max - min
print(range(diamonds$price))
